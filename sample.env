# Docker only
export POSTGRES_DB=xxxxxxxxxxxxxxxxx
export POSTGRES_USER=xxxxxxxxxxxxxxx
export POSTGRES_PASSWORD=xxxxxxxxxxx
# For docker POSTGRES_HOST will be service name (eg:- db) instead of localhost
# Need to replace actual value manually
export DATABASE_URL=postgres://<POSTGRES_USER>:<POSTGRES_PASSWORD>@<POSTGRES_HOST>/<POSTGRES_DB>

export DEBUG=true
export SECRET_KEY=add-your-secret-here
export ALLOWED_HOSTS=127.0.0.1,localhost
export USE_AWS_S3=true

# Database
export DATABASE_ENGINE=django.db.backends.postgresql_psycopg2
export DATABASE_NAME=xxxxxxxxxxxxxxx
export DATABASE_USER=xxxxxxxxxxxxxxx
export DATABASE_HOST=127.0.0.1
export DATABASE_PORT=5432
export DATABASE_PASSWORD=xxxxxxxxxxx

# CORS headers
export CORS_ALLOW_CREDENTIALS=false
export CORS_ALLOW_ALL_ORIGINS=true
export CORS_ALLOWED_ORIGINS=http://localhost:4200,http://localhost:3000

# AWS
export AWS_ACCESS_KEY_ID=xxxxxxxxxxx
export AWS_SECRET_ACCESS_KEY=xxxxxxxxxxx
export AWS_STORAGE_BUCKET_NAME=xxxxxxxxxxx
export AWS_S3_REGION_NAME=xxxxxxxxxxx
export AWS_S3_ENDPOINT_URL=https://s3.amazonaws.com
export AWS_S3_ADDRESSING_STYLE=virtual  # auto / virtual / path
export AWS_QUERYSTRING_EXPIRE=3600

# Google places API
export GOOGLE_PLACES_API_KEY=xxxxxxxxxxxxxxxxxxxx

# Celery
export CELERY_BROKER_URL='redis://127.0.0.1:6379'
export CELERY_RESULT_BACKEND='redis://127.0.0.1:6379'
