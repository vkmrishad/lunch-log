# Generated by Django 4.2.13 on 2024-06-16 13:47

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Restaurant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        help_text="Created time",
                        null=True,
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="Updated time", null=True
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                (
                    "google_place_name",
                    models.CharField(max_length=255, verbose_name="Google place name"),
                ),
                (
                    "google_place_id",
                    models.CharField(max_length=50, verbose_name="Google place ID"),
                ),
                ("types", models.JSONField(verbose_name="types")),
                (
                    "national_phone_number",
                    models.CharField(
                        max_length=20, verbose_name="national phone number"
                    ),
                ),
                (
                    "international_phone_number",
                    models.CharField(
                        max_length=20, verbose_name="international phone number"
                    ),
                ),
                (
                    "formatted_address",
                    models.CharField(max_length=255, verbose_name="formatted address"),
                ),
                (
                    "street_number",
                    models.CharField(max_length=10, verbose_name="street number"),
                ),
                ("street", models.CharField(max_length=255, verbose_name="street")),
                (
                    "sublocality_level_1",
                    models.CharField(
                        max_length=255, verbose_name="sublocality level 1"
                    ),
                ),
                ("city", models.CharField(max_length=255, verbose_name="city")),
                (
                    "administrative_area_level_3",
                    models.CharField(
                        max_length=255, verbose_name="administrative area level 3"
                    ),
                ),
                (
                    "administrative_area_level_2",
                    models.CharField(
                        max_length=255, verbose_name="administrative area level 2"
                    ),
                ),
                (
                    "administrative_area_level_1",
                    models.CharField(
                        max_length=255, verbose_name="administrative area level 1"
                    ),
                ),
                ("country", models.CharField(max_length=255, verbose_name="country")),
                (
                    "postal_code",
                    models.CharField(max_length=20, verbose_name="postal code"),
                ),
                ("plus_code", models.JSONField(verbose_name="plus code")),
                ("latitude", models.FloatField(verbose_name="latitude")),
                ("longitude", models.FloatField(verbose_name="longitude")),
                ("viewport", models.JSONField(verbose_name="viewport")),
                ("rating", models.FloatField(verbose_name="rating")),
                ("google_maps_url", models.URLField(verbose_name="Google maps URL")),
                ("website_url", models.URLField(verbose_name="website URL")),
                (
                    "utc_offset_minutes",
                    models.IntegerField(verbose_name="UTC offset minutes"),
                ),
                (
                    "adr_formatted_address",
                    models.CharField(
                        max_length=255, verbose_name="ADR formatted address"
                    ),
                ),
                (
                    "business_status",
                    models.CharField(max_length=50, verbose_name="business status"),
                ),
                (
                    "price_level",
                    models.CharField(max_length=50, verbose_name="price level"),
                ),
                (
                    "user_rating_count",
                    models.IntegerField(verbose_name="user rating count"),
                ),
                (
                    "icon_mask_base_url",
                    models.URLField(verbose_name="icon mask base URL"),
                ),
                (
                    "icon_background_color",
                    models.CharField(
                        max_length=7, verbose_name="icon background color"
                    ),
                ),
                (
                    "primary_type_display_name",
                    models.CharField(
                        max_length=255, verbose_name="primary type display name"
                    ),
                ),
                ("takeout", models.BooleanField(verbose_name="takeout")),
                ("delivery", models.BooleanField(verbose_name="delivery")),
                ("dine_in", models.BooleanField(verbose_name="dine-in")),
                (
                    "curbside_pickup",
                    models.BooleanField(verbose_name="curbside pickup"),
                ),
                ("reservable", models.BooleanField(verbose_name="reservable")),
                ("serves_lunch", models.BooleanField(verbose_name="serves lunch")),
                ("serves_dinner", models.BooleanField(verbose_name="serves dinner")),
                ("serves_beer", models.BooleanField(verbose_name="serves beer")),
                ("serves_wine", models.BooleanField(verbose_name="serves wine")),
                (
                    "serves_vegetarian_food",
                    models.BooleanField(verbose_name="serves vegetarian food"),
                ),
                (
                    "primary_type",
                    models.CharField(max_length=255, verbose_name="primary type"),
                ),
                (
                    "short_formatted_address",
                    models.CharField(
                        max_length=255, verbose_name="short formatted address"
                    ),
                ),
            ],
            options={
                "verbose_name": "restaurant",
                "verbose_name_plural": "restaurants",
                "ordering": ["-id"],
            },
        ),
    ]
